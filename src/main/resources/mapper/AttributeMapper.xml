<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xie.mapper.AttributeMapper" >
  <resultMap id="BaseResultMap" type="com.xie.bean.Attribute" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="attribute_category_id" property="attributeCategoryId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="input_type" property="inputType" jdbcType="BIT" />
    <result column="sort_order" property="sortOrder" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xie.bean.Attribute" extends="BaseResultMap" >
    <result column="values" property="values" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, attribute_category_id, name, input_type, sort_order
  </sql>
  <sql id="Blob_Column_List" >
    values
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attribute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xie.bean.Attribute" >
      <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into attribute (id, attribute_category_id, name, 
      input_type, sort_order, values
      )
    values (#{id,jdbcType=INTEGER}, #{attributeCategoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{inputType,jdbcType=BIT}, #{sortOrder,jdbcType=TINYINT}, #{values,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xie.bean.Attribute" >
    insert into attribute
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="attributeCategoryId != null" >
        attribute_category_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="inputType != null" >
        input_type,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="values != null" >
        values,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="attributeCategoryId != null" >
        #{attributeCategoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null" >
        #{inputType,jdbcType=BIT},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="values != null" >
        #{values,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xie.bean.Attribute" >
    update attribute
    <set >
      <if test="attributeCategoryId != null" >
        attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null" >
        input_type = #{inputType,jdbcType=BIT},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="values != null" >
        values = #{values,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xie.bean.Attribute" >
    update attribute
    set attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      input_type = #{inputType,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=TINYINT},
      values = #{values,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xie.bean.Attribute" >
    update attribute
    set attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      input_type = #{inputType,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>