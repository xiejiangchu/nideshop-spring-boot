<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xie.mapper.AddressMapper">
    <resultMap id="BaseResultMap" type="com.xie.bean.Address">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="country_id" property="countryId" jdbcType="SMALLINT"/>
        <result column="province_id" property="provinceId" jdbcType="SMALLINT"/>
        <result column="city_id" property="cityId" jdbcType="SMALLINT"/>
        <result column="district_id" property="districtId" jdbcType="SMALLINT"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="is_default" property="isDefault" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="BaseResultMapWithName" type="com.xie.bean.AddressWithName">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="country_id" property="countryId" jdbcType="SMALLINT"/>
        <result column="province_id" property="provinceId" jdbcType="SMALLINT"/>
        <result column="city_id" property="cityId" jdbcType="SMALLINT"/>
        <result column="district_id" property="districtId" jdbcType="SMALLINT"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="province_name" property="province_name" jdbcType="VARCHAR"/>
        <result column="city_name" property="city_name" jdbcType="VARCHAR"/>
        <result column="district_name" property="district_name" jdbcType="VARCHAR"/>
        <result column="is_default" property="isDefault" jdbcType="BIT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, user_id, country_id, province_id, city_id, district_id, address, mobile, 
    is_default
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from address
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectWithNameByPrimaryKey" resultMap="BaseResultMapWithName" parameterType="java.lang.Integer">
        select
        a.id, a.name, a.user_id, a.country_id, a.province_id, a.city_id, a.district_id, a.address, a.mobile, a.is_default
        ,r1.name as province_name
        ,r2.name as city_name
        ,r3.name as district_name
        from address a
        LEFT JOIN  region r1 ON a.province_id=r1.id
        LEFT JOIN  region r2 ON a.city_id=r2.id
        LEFT JOIN  region r3 ON a.district_id=r3.id
        where a.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectDefaultByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from address
        where user_id = #{uid,jdbcType=INTEGER}
        AND is_default=1
    </select>

    <select id="selectByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from address
        where user_id = #{uid,jdbcType=INTEGER}
    </select>

    <select id="selectWithNameByUid" resultMap="BaseResultMapWithName" parameterType="java.lang.Integer">
        select
        a.id, a.name, a.user_id, a.country_id, a.province_id, a.city_id, a.district_id, a.address, a.mobile, a.is_default
        ,r1.name as province_name
        ,r2.name as city_name
        ,r3.name as district_name
        from address a
        LEFT JOIN  region r1 ON a.province_id=r1.id
        LEFT JOIN  region r2 ON a.city_id=r2.id
        LEFT JOIN  region r3 ON a.district_id=r3.id
        where user_id = #{uid,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xie.bean.Address">
    insert into address (id, name, user_id, 
      country_id, province_id, city_id, 
      district_id, address, mobile, 
      is_default)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{countryId,jdbcType=SMALLINT}, #{provinceId,jdbcType=SMALLINT}, #{cityId,jdbcType=SMALLINT}, 
      #{districtId,jdbcType=SMALLINT}, #{address,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="com.xie.bean.Address">
        insert into address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="countryId != null">
                country_id,
            </if>
            <if test="provinceId != null">
                province_id,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="districtId != null">
                district_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                #{countryId,jdbcType=SMALLINT},
            </if>
            <if test="provinceId != null">
                #{provinceId,jdbcType=SMALLINT},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=SMALLINT},
            </if>
            <if test="districtId != null">
                #{districtId,jdbcType=SMALLINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xie.bean.Address">
        update address
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                country_id = #{countryId,jdbcType=SMALLINT},
            </if>
            <if test="provinceId != null">
                province_id = #{provinceId,jdbcType=SMALLINT},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=SMALLINT},
            </if>
            <if test="districtId != null">
                district_id = #{districtId,jdbcType=SMALLINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xie.bean.Address">
    update address
    set name = #{name,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      country_id = #{countryId,jdbcType=SMALLINT},
      province_id = #{provinceId,jdbcType=SMALLINT},
      city_id = #{cityId,jdbcType=SMALLINT},
      district_id = #{districtId,jdbcType=SMALLINT},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>