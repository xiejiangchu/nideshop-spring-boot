<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xie.mapper.GoodsAttributeMapper">
    <resultMap id="BaseResultMap" type="com.xie.bean.GoodsAttribute">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="attribute_id" property="attributeId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xie.bean.GoodsAttribute" extends="BaseResultMap">
        <result column="value" property="value" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, goods_id, attribute_id
  </sql>
    <sql id="Blob_Column_List">
    value
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from goods_attribute
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByGoodsId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        SELECT ga.id, ga.goods_id, ga.attribute_id,a.name
        from goods_attribute ga
        INNER JOIN attribute a ON ga.attribute_id=a.id
        WHERE ga.goods_id=#{gid,jdbcType=INTEGER}
        ORDER BY ga.id
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xie.bean.GoodsAttribute">
        <selectKey resultType="Java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    insert into goods_attribute (id, goods_id, attribute_id, 
      value)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{attributeId,jdbcType=INTEGER}, 
      #{value,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.xie.bean.GoodsAttribute">
        insert into goods_attribute
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="attributeId != null">
                attribute_id,
            </if>
            <if test="value != null">
                value,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="attributeId != null">
                #{attributeId,jdbcType=INTEGER},
            </if>
            <if test="value != null">
                #{value,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xie.bean.GoodsAttribute">
        update goods_attribute
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="attributeId != null">
                attribute_id = #{attributeId,jdbcType=INTEGER},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xie.bean.GoodsAttribute">
    update goods_attribute
    set goods_id = #{goodsId,jdbcType=INTEGER},
      attribute_id = #{attributeId,jdbcType=INTEGER},
      value = #{value,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.xie.bean.GoodsAttribute">
    update goods_attribute
    set goods_id = #{goodsId,jdbcType=INTEGER},
      attribute_id = #{attributeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>