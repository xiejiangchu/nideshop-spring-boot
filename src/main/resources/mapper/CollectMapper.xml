<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xie.mapper.CollectMapper">
    <resultMap id="BaseResultMap" type="com.xie.bean.Collect">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="value_id" property="valueId" jdbcType="INTEGER"/>
        <result column="add_time" property="addTime" jdbcType="INTEGER"/>
        <result column="is_attention" property="isAttention" jdbcType="BIT"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMapWithGoods" type="com.xie.bean.CollectWithGoods">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="value_id" property="valueId" jdbcType="INTEGER"/>
        <result column="add_time" property="addTime" jdbcType="INTEGER"/>
        <result column="is_attention" property="isAttention" jdbcType="BIT"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="list_pic_url" property="listPicUrl" jdbcType="VARCHAR"/>
        <result column="retail_price" property="retailPrice" jdbcType="DECIMAL"/>
        <result column="goods_brief" property="goodsBrief" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_id, value_id, add_time, is_attention, type_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,g.name,g.list_pic_url,g.goods_brief,g.retail_price
        from collect
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByUid" resultMap="BaseResultMapWithGoods">
        SELECT
        from collect c
        LEFT JOIN goods g on c.value_id  = g.id
        WHERE user_id=#{uid,jdbcType=INTEGER} and type_id=#{typeId,jdbcType=INTEGER}
    </select>

    <select id="selectByParams" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,g.name,g.list_pic_url,g.goods_brief,g.retail_price
        from collect
        where 1=1
        <if test="user_id!=null">
            AND user_id = #{user_id,jdbcType=INTEGER}
        </if>
        <if test="value_id!=null">
            AND value_id = #{value_id,jdbcType=INTEGER}
        </if>
        <if test="type_id!=null">
            AND type_id = #{type_id,jdbcType=INTEGER}
        </if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xie.bean.Collect">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into collect (id, user_id, value_id,
        add_time, is_attention, type_id
        )
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{valueId,jdbcType=INTEGER},
        #{addTime,jdbcType=INTEGER}, #{isAttention,jdbcType=BIT}, #{typeId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.xie.bean.Collect">
        insert into collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="valueId != null">
                value_id,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="isAttention != null">
                is_attention,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="valueId != null">
                #{valueId,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=INTEGER},
            </if>
            <if test="isAttention != null">
                #{isAttention,jdbcType=BIT},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xie.bean.Collect">
        update collect
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="valueId != null">
                value_id = #{valueId,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=INTEGER},
            </if>
            <if test="isAttention != null">
                is_attention = #{isAttention,jdbcType=BIT},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xie.bean.Collect">
    update collect
    set user_id = #{userId,jdbcType=INTEGER},
      value_id = #{valueId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=INTEGER},
      is_attention = #{isAttention,jdbcType=BIT},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>